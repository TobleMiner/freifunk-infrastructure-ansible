function ffrl_is_{{ site.code }}() {
  return net ~ [ {{ site.ffrl.network.ipv6 }}+ ];
}

table 'ffrl_{{ site.code }}';

table 'ffrl';

# Import all routes on interface br-{{ site.code }}
protocol direct {
  table 'ffrl_{{ site.code }}';
  interface "br-{{ site.code }}";
  import where ffrl_is_{{ site.code }}();
};

protocol pipe {
  table 'ffrl_{{ site.code }}';
  peer table ffrl;
  export where ffrl_is_{{ site.code }}();
  import none;
};

protocol pipe {
  table 'ffrl_{{ site.code }}';
  peer table 'mesh_{{ site.code }}';
  export where ffrl_is_{{ site.code }}();
  import where ffrl_is_{{ site.code }}();
};

protocol pipe {
  table 'ffrl';
  peer table 'ffrl_kernel';
  export all;
  import all;
};

protocol pipe {
  table 'ffrl';
  peer table 'exit_{{ site.code }}';
  export all;
  import none;
};

template bgp bgp_ffrl {
  table ffrl;
  local as asn;
  import all;
  export where net != ::/0;
  direct;
};

# load ffrl peering config
include "/etc/bird/bird6.peers.d/ffrl.conf";
